<?php

namespace Count2Health\AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use PhpUnitsOfMeasure\PhysicalQuantity\Mass;

/**
 * Activity
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Count2Health\AppBundle\Entity\ActivityRepository")
 */
class Activity
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var ActivityCategory
     *
     * @ORM\ManyToOne(targetEntity="ActivityCategory", inversedBy="children")
     */
    private $category;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var integer
     *
     * @ORM\Column(name="fatsecretEntryId", type="integer", nullable=true)
     */
    private $fatsecretEntryId;

    /**
     * @var string
     *
     * @ORM\Column(name="mets", type="decimal", precision=3, scale=1)
     */
    private $mets;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Activity
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set fatsecretEntryId
     *
     * @param integer $fatsecretEntryId
     * @return Activity
     */
    public function setFatsecretEntryId($fatsecretEntryId)
    {
        $this->fatsecretEntryId = $fatsecretEntryId;

        return $this;
    }

    /**
     * Get fatsecretEntryId
     *
     * @return integer 
     */
    public function getFatsecretEntryId()
    {
        return $this->fatsecretEntryId;
    }

    /**
     * Set mets
     *
     * @param string $mets
     * @return Activity
     */
    public function setMets($mets)
    {
        $this->mets = $mets;

        return $this;
    }

    /**
     * Get mets
     *
     * @return string 
     */
    public function getMets()
    {
        return $this->mets;
    }

public function getCaloriesBurnedPerHour(Mass $weight)
{
return $weight->toUnit('kg') * $this->getMets();
}

public function getCaloriesBurned(Mass $weight, $minutes)
{
return $weight->toUnit('kg') * $this->getMets() * $minutes / 60.0;
}

}
